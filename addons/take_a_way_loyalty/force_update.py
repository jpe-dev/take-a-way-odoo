# -*- coding: utf-8 -*-
"""
Script pour forcer la mise √† jour du module take_a_way_loyalty
"""

from odoo import api, fields, models
import logging

_logger = logging.getLogger(__name__)

def force_update_module():
    """Force la mise √† jour du module"""
    
    try:
        # R√©cup√©rer l'environnement Odoo
        env = api.Environment(cr, uid, {})
        
        # R√©cup√©rer le module
        module = env['ir.module.module'].search([
            ('name', '=', 'take_a_way_loyalty')
        ], limit=1)
        
        if not module:
            print("‚ùå Module take_a_way_loyalty non trouv√©")
            return False
        
        print(f"‚úÖ Module trouv√©: {module.name} (√©tat: {module.state})")
        
        # Forcer la mise √† jour
        if module.state == 'installed':
            print("üîÑ Mise √† jour du module...")
            module.button_immediate_upgrade()
        elif module.state == 'uninstalled':
            print("üì¶ Installation du module...")
            module.button_immediate_install()
        else:
            print(f"‚ÑπÔ∏è Module dans l'√©tat: {module.state}")
        
        # V√©rifier que les mod√®les sont cr√©√©s
        models_to_check = [
            'add.participant.wizard',
            'parrainage.wizard',
            'heure.prevue.wizard'
        ]
        
        for model_name in models_to_check:
            model = env['ir.model'].search([('model', '=', model_name)], limit=1)
            if model:
                print(f"‚úÖ Mod√®le {model_name} cr√©√©")
            else:
                print(f"‚ùå Mod√®le {model_name} non trouv√©")
        
        # V√©rifier les permissions
        access_records = env['ir.model.access'].search([
            ('name', 'in', ['add.participant.wizard', 'parrainage.wizard', 'heure.prevue.wizard'])
        ])
        
        print(f"‚úÖ {len(access_records)} enregistrements de permissions trouv√©s")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la mise √† jour: {str(e)}")
        return False

if __name__ == "__main__":
    print("=== Force Update du module take_a_way_loyalty ===")
    
    success = force_update_module()
    
    if success:
        print("‚úÖ Mise √† jour forc√©e termin√©e!")
        print("üìã Red√©marrez Odoo pour appliquer les changements")
    else:
        print("‚ùå √âchec de la mise √† jour forc√©e") 