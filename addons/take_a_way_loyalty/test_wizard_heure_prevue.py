# -*- coding: utf-8 -*-
"""
Test pour v√©rifier que le wizard d'heure pr√©vue fonctionne
"""

from odoo import api, fields, models
from datetime import datetime, timedelta
import logging

_logger = logging.getLogger(__name__)

def test_wizard_heure_prevue():
    """Test du wizard d'heure pr√©vue"""
    
    try:
        # R√©cup√©rer l'environnement Odoo
        env = api.Environment(cr, uid, {})
        
        # V√©rifier que le mod√®le wizard existe
        if not env['ir.model'].search([('model', '=', 'heure.prevue.wizard')]):
            print("‚ùå Le mod√®le heure.prevue.wizard n'existe pas")
            return False
        
        print("‚úÖ Le mod√®le heure.prevue.wizard existe")
        
        # Cr√©er une commande PoS de test
        pos_order = env['pos.order'].create({
            'name': 'Test Wizard Heure Pr√©vue',
            'date_order': fields.Datetime.now(),
            'amount_total': 25.00,
            'state': 'draft'
        })
        
        print(f"‚úÖ Commande PoS cr√©√©e: {pos_order.name}")
        
        # Cr√©er un wizard d'heure pr√©vue
        wizard = env['heure.prevue.wizard'].create({
            'pos_order_id': pos_order.id,
            'heure_prevue': fields.Datetime.now() + timedelta(hours=1)
        })
        
        print(f"‚úÖ Wizard cr√©√© avec heure pr√©vue: {wizard.heure_prevue}")
        
        # Tester l'action de confirmation
        result = wizard.action_confirm()
        print("‚úÖ Action de confirmation test√©e")
        
        # V√©rifier que l'heure pr√©vue a √©t√© mise √† jour
        pos_order.refresh()
        if pos_order.heure_prevue:
            print(f"‚úÖ Heure pr√©vue mise √† jour: {pos_order.heure_prevue}")
        else:
            print("‚ùå Heure pr√©vue non mise √† jour")
            return False
        
        # Tester l'action rapide
        result_rapide = pos_order.action_set_heure_prevue_rapide()
        print("‚úÖ Action rapide test√©e")
        
        # V√©rifier que l'heure pr√©vue a √©t√© mise √† jour
        pos_order.refresh()
        print(f"‚úÖ Heure pr√©vue apr√®s action rapide: {pos_order.heure_prevue}")
        
        # Nettoyer
        pos_order.unlink()
        print("‚úÖ Commande de test supprim√©e")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {str(e)}")
        return False

if __name__ == "__main__":
    print("=== Test du wizard d'heure pr√©vue ===")
    
    success = test_wizard_heure_prevue()
    
    if success:
        print("‚úÖ Test r√©ussi! Le wizard d'heure pr√©vue fonctionne correctement.")
        print("üìã Instructions pour utiliser:")
        print("1. Allez dans Point de Vente > Commandes")
        print("2. S√©lectionnez une commande")
        print("3. Dans le menu Actions, vous devriez voir:")
        print("   - 'D√©finir heure pr√©vue' (ouvre le wizard)")
        print("   - 'Heure pr√©vue +1h' (d√©finit rapidement)")
    else:
        print("‚ùå Test √©chou√©. V√©rifiez les logs pour plus de d√©tails.") 